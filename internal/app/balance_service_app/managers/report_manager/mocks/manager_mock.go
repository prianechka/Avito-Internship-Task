// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	transaction "Avito-Internship-Task/internal/app/balance_service_app/transaction"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockReportManagerInterface is a mock of ReportManagerInterface interface.
type MockReportManagerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockReportManagerInterfaceMockRecorder
}

// MockReportManagerInterfaceMockRecorder is the mock recorder for MockReportManagerInterface.
type MockReportManagerInterfaceMockRecorder struct {
	mock *MockReportManagerInterface
}

// NewMockReportManagerInterface creates a new mock instance.
func NewMockReportManagerInterface(ctrl *gomock.Controller) *MockReportManagerInterface {
	mock := &MockReportManagerInterface{ctrl: ctrl}
	mock.recorder = &MockReportManagerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReportManagerInterface) EXPECT() *MockReportManagerInterfaceMockRecorder {
	return m.recorder
}

// GetFinanceReport mocks base method.
func (m *MockReportManagerInterface) GetFinanceReport(month, year int, url string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFinanceReport", month, year, url)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetFinanceReport indicates an expected call of GetFinanceReport.
func (mr *MockReportManagerInterfaceMockRecorder) GetFinanceReport(month, year, url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFinanceReport", reflect.TypeOf((*MockReportManagerInterface)(nil).GetFinanceReport), month, year, url)
}

// GetUserReport mocks base method.
func (m *MockReportManagerInterface) GetUserReport(userID int, orderBy string, limit, offset int) ([]transaction.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserReport", userID, orderBy, limit, offset)
	ret0, _ := ret[0].([]transaction.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserReport indicates an expected call of GetUserReport.
func (mr *MockReportManagerInterfaceMockRecorder) GetUserReport(userID, orderBy, limit, offset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserReport", reflect.TypeOf((*MockReportManagerInterface)(nil).GetUserReport), userID, orderBy, limit, offset)
}
