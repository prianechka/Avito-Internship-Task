// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	report "Avito-Internship-Task/internal/app/balance_service_app/report"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockReportControllerInterface is a mock of ReportControllerInterface interface.
type MockReportControllerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockReportControllerInterfaceMockRecorder
}

// MockReportControllerInterfaceMockRecorder is the mock recorder for MockReportControllerInterface.
type MockReportControllerInterfaceMockRecorder struct {
	mock *MockReportControllerInterface
}

// NewMockReportControllerInterface creates a new mock instance.
func NewMockReportControllerInterface(ctrl *gomock.Controller) *MockReportControllerInterface {
	mock := &MockReportControllerInterface{ctrl: ctrl}
	mock.recorder = &MockReportControllerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReportControllerInterface) EXPECT() *MockReportControllerInterfaceMockRecorder {
	return m.recorder
}

// CreateFinancialReportCSV mocks base method.
func (m *MockReportControllerInterface) CreateFinancialReportCSV(arg0 []report.FinanceReport) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFinancialReportCSV", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateFinancialReportCSV indicates an expected call of CreateFinancialReportCSV.
func (mr *MockReportControllerInterfaceMockRecorder) CreateFinancialReportCSV(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFinancialReportCSV", reflect.TypeOf((*MockReportControllerInterface)(nil).CreateFinancialReportCSV), arg0)
}
