// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockServiceHandlerInterface is a mock of ServiceHandlerInterface interface.
type MockServiceHandlerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockServiceHandlerInterfaceMockRecorder
}

// MockServiceHandlerInterfaceMockRecorder is the mock recorder for MockServiceHandlerInterface.
type MockServiceHandlerInterfaceMockRecorder struct {
	mock *MockServiceHandlerInterface
}

// NewMockServiceHandlerInterface creates a new mock instance.
func NewMockServiceHandlerInterface(ctrl *gomock.Controller) *MockServiceHandlerInterface {
	mock := &MockServiceHandlerInterface{ctrl: ctrl}
	mock.recorder = &MockServiceHandlerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceHandlerInterface) EXPECT() *MockServiceHandlerInterfaceMockRecorder {
	return m.recorder
}

// AcceptService mocks base method.
func (m *MockServiceHandlerInterface) AcceptService(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AcceptService", w, r)
}

// AcceptService indicates an expected call of AcceptService.
func (mr *MockServiceHandlerInterfaceMockRecorder) AcceptService(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AcceptService", reflect.TypeOf((*MockServiceHandlerInterface)(nil).AcceptService), w, r)
}

// BuyService mocks base method.
func (m *MockServiceHandlerInterface) BuyService(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "BuyService", w, r)
}

// BuyService indicates an expected call of BuyService.
func (mr *MockServiceHandlerInterfaceMockRecorder) BuyService(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BuyService", reflect.TypeOf((*MockServiceHandlerInterface)(nil).BuyService), w, r)
}

// RefuseService mocks base method.
func (m *MockServiceHandlerInterface) RefuseService(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RefuseService", w, r)
}

// RefuseService indicates an expected call of RefuseService.
func (mr *MockServiceHandlerInterfaceMockRecorder) RefuseService(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RefuseService", reflect.TypeOf((*MockServiceHandlerInterface)(nil).RefuseService), w, r)
}
