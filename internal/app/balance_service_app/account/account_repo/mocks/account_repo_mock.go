// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAccountRepoInterface is a mock of AccountRepoInterface interface.
type MockAccountRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAccountRepoInterfaceMockRecorder
}

// MockAccountRepoInterfaceMockRecorder is the mock recorder for MockAccountRepoInterface.
type MockAccountRepoInterfaceMockRecorder struct {
	mock *MockAccountRepoInterface
}

// NewMockAccountRepoInterface creates a new mock instance.
func NewMockAccountRepoInterface(ctrl *gomock.Controller) *MockAccountRepoInterface {
	mock := &MockAccountRepoInterface{ctrl: ctrl}
	mock.recorder = &MockAccountRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountRepoInterface) EXPECT() *MockAccountRepoInterfaceMockRecorder {
	return m.recorder
}

// AddNewAccount mocks base method.
func (m *MockAccountRepoInterface) AddNewAccount(userID int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddNewAccount", userID)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddNewAccount indicates an expected call of AddNewAccount.
func (mr *MockAccountRepoInterfaceMockRecorder) AddNewAccount(userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddNewAccount", reflect.TypeOf((*MockAccountRepoInterface)(nil).AddNewAccount), userID)
}

// ChangeAmount mocks base method.
func (m *MockAccountRepoInterface) ChangeAmount(userID int64, delta float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangeAmount", userID, delta)
	ret0, _ := ret[0].(error)
	return ret0
}

// ChangeAmount indicates an expected call of ChangeAmount.
func (mr *MockAccountRepoInterfaceMockRecorder) ChangeAmount(userID, delta interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangeAmount", reflect.TypeOf((*MockAccountRepoInterface)(nil).ChangeAmount), userID, delta)
}

// GetCurrentAmount mocks base method.
func (m *MockAccountRepoInterface) GetCurrentAmount(userID int64) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrentAmount", userID)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCurrentAmount indicates an expected call of GetCurrentAmount.
func (mr *MockAccountRepoInterfaceMockRecorder) GetCurrentAmount(userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrentAmount", reflect.TypeOf((*MockAccountRepoInterface)(nil).GetCurrentAmount), userID)
}
